plugins {
    id 'java'
    id "io.freefair.lombok" version "4.1.4"
    id "org.hidetake.swagger.generator" version "2.18.1"
    id "org.springframework.boot" version "2.2.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

group 'com.petstore'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.11

ext['junit-jupiter.version'] = '5.5.2'
ext {
    swagger_codegen_version = "2.4.2"
    swagger_annotations_version = "1.5.15"
    gson_fire_version = "1.8.2"
    okio_version = "1.13.0"
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    swaggerCodegen "io.swagger:swagger-codegen-cli:$swagger_codegen_version"
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "io.gsonfire:gson-fire:$gson_fire_version"
    implementation "com.squareup.okio:okio:$okio_version"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation "io.rest-assured:rest-assured"
    implementation "org.apache.logging.log4j:log4j-iostreams"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.platform:junit-platform-console"
}

configurations.all {
    exclude module: 'spring-boot-starter-logging'
}

task downloadSwaggerJson {
    doLast {
        def file = new FileOutputStream('codegen/petstore.json')
        def out = new BufferedOutputStream(file)
        out << new URL("https://petstore.swagger.io/v2/swagger.json").openStream()
        out.close()
    }
}

swaggerSources {
    petstore {
        inputFile = file('codegen/petstore.json')
        code {
            language = 'java'
            configFile = file('codegen/codegen-config.json')
            components = [
                    models: true,
                    modelDocs: false,
                    apis: ['Store', 'Pet'],
                    apiTests: false,
                    supportingFiles: ['ApiClient.java', 'JSON.java']
            ]
        }
    }
}

// Configure compile task dependency and source
resolveSwaggerTemplate.dependsOn downloadSwaggerJson
compileJava.dependsOn swaggerSources.petstore.code
sourceSets.main.java.srcDir "${swaggerSources.petstore.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.petstore.code.outputDir}/src/main/resources"

bootJar {
    zip64 true
    archiveVersion.set ''
    mainClassName = 'org.junit.platform.console.ConsoleLauncher'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(project.configurations.testRuntimeClasspath - project.configurations.runtimeClasspath) {
        into 'BOOT-INF/lib'
    }
    from(sourceSets.test.output) {
        into 'BOOT-INF/classes'
    }
}

clean {
    delete 'codegen/petstore.json'
}

test {
    useJUnitPlatform()

    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

//test.enabled false
generateLombokConfig.enabled false
